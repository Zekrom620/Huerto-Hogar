// src/pages/Products.jsx

import React, { useState } from 'react';
import { PRODUCTOS } from '../data/ProductsData'; // Importamos la lista de productos
import ProductsGrid from '../components/products/ProductsGrid'; // Subcomponente para renderizar
import { getProductoRandom } from '../utils/helpers'; // Usamos la utilidad si necesitamos aleatorios

// Definici칩n de las categor칤as para los botones de filtro
const CATEGORIES = [
    { id: 'todos', label: '游빜 Ver Todo' },
    { id: 'frutas-frescas', label: '游꼝 Frutas Frescas' },
    { id: 'verduras-organicas', label: '游볿 Verduras Org치nicas' },
    { id: 'productos-organicos', label: '游꼺 Otros Org치nicos' },
    { id: 'lacteos', label: '游볱 Productos L치cteos' },
];

const Products = () => {
    // 1. Estado para el filtro: 'useState' reemplaza la variable global de filtro y la clase 'activo-filtro'
    const [activeCategory, setActiveCategory] = useState('todos');

    // 2. L칩gica de Filtrado (reemplaza la funci칩n 'renderProductosConFiltro')
    const productosFiltrados = PRODUCTOS.filter(p => {
        return activeCategory === 'todos' || p.categoria === activeCategory;
    });

    // 3. Manejador de eventos (reemplaza 'botonesFiltro.forEach(boton => { boton.addEventListener(...) })')
    const handleFilterChange = (category) => {
        setActiveCategory(category);
    };

    return (
        <main>
            <h2>Cat치logo: Productos Frescos del Campo</h2>

            {/* Contenedor de Filtros (Reemplazo del div #filtros-categoria) */}
            <div id="filtros-categoria" style={{ 
                marginBottom: '30px', 
                textAlign: 'center', 
                display: 'flex', 
                justifyContent: 'center', 
                gap: '10px', 
                flexWrap: 'wrap' 
            }}>
                {CATEGORIES.map(cat => (
                    <button 
                        key={cat.id}
                        className={`btn-primary ${activeCategory === cat.id ? 'activo-filtro' : ''}`}
                        // 4. En React, usamos 'onClick' para manejar el evento
                        onClick={() => handleFilterChange(cat.id)}
                    >
                        {cat.label}
                    </button>
                ))}
            </div>

            {/* La clase activo-filtro probablemente no est치 definida en estilo.css, la definiremos 
                como un estilo global en CSS (ya importado en index.js) para que coincida con tu intenci칩n. 
                Si no est치 definida, puedes a침adirla manualmente a 'src/assets/css/estilo.css': 
                .activo-filtro { background-color: #8B4513 !important; color: white !important; }
            */}

            {/* 5. Renderizar la lista de productos filtrados */}
            <section className="catalogo">
                {productosFiltrados.length > 0 ? (
                    // Componente ProductsGrid se encarga de dibujar cada item
                    <ProductsGrid products={productosFiltrados} />
                ) : (
                    <p style={{ textAlign: 'center' }}>A칰n no tenemos productos en esta categor칤a.</p>
                )}
            </section>
        </main>
    );
}

export default Products;